<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="by.ibrel.kitan.web.controllers"/>
    <context:property-placeholder location="classpath:jdbc.properties" file-encoding="UTF-8"/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <import resource="classpath:kitan-dao-beans.xml"/>
    <import resource="classpath:security-config.xml"/>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="true"/>
        <property name="mediaTypes">
            <value>
                <!--x-javascript=application/x-javascript-->
                <!--json=application/json-->
                xml=application/xml
            </value>
        </property>
    </bean>

    <bean id="sortResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver"/>
    <bean id="pageableResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
        <constructor-arg ref="sortResolver"/>
    </bean>

    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!--<property name="prefix" value="/WEB-INF/views/jsp/"/>-->
        <property name="prefix" value="/WEB-INF/kitan/tiles/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="viewResolvers">
            <list>
                <ref bean="tilesViewResolver"/>
                <ref bean="jspViewResolver"/>
            </list>
        </property>
    </bean>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/kitan/tiles-kitan.xml</value>
            </list>
        </property>
        <property name="checkRefresh" value="true"/>
        <!--enabling auto-refresh of Tiles definitions. -->
        <property name="preparerFactoryClass"
                  value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"/>
    </bean>

    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <property name="order" value="2"/>
    </bean>

    <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <context:component-scan base-package="by.ibrel.kitan.logic"/>
    <context:component-scan base-package="by.ibrel.kitan.auth"/>
    <context:component-scan base-package="by.ibrel.kitan.web.security"/>

    <bean id="passwordMatchesValidator" class="by.ibrel.kitan.auth.validation.PasswordMatchesValidator"/>

    <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>

    <bean id="myAuthenticationSuccessHandler" class="by.ibrel.kitan.web.security.MySimpleUrlAuthenticationSuccessHandler"/>

    <bean id="userDetailsService" class="by.ibrel.kitan.web.security.MyUserDetailsService"/>

    <!--@Transaction-->
    <tx:annotation-driven/>

    <!--message-->
   <import resource="classpath:messages-conf.xml"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg value="11"/>
    </bean>

    <!-- Defines which remember me implementation to use - in this case using a database table to log 'remembered' tokens -->
    <bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg index="0" value="rememberKey"/>
        <constructor-arg index="1" ref="userDetailsService"/>
        <constructor-arg index="2" ref="jdbcTokenRepository"/>
        <property name="alwaysRemember" value="true" />
    </bean>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="createTableOnStartup" value="false" />
        <property name="dataSource" ref="kitan-ds" />
    </bean>


    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->

        <!-- max size of file in memory (in bytes) -->
        <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

    </bean>

    <mvc:view-controller path="/login_" view-name="auth.login"/>
    <mvc:view-controller path="/home" view-name="main.home"/>
    <mvc:view-controller path="/contacts" view-name="main.contacts"/>
    <mvc:view-controller path="/help" view-name="main.help"/>
    <mvc:view-controller path="/ref" view-name="main.ref"/>
    <mvc:view-controller path="/about" view-name="main.about"/>
    <mvc:view-controller path="/users/list" view-name="auth.user.list"/>
    <mvc:view-controller path="/user/edit" view-name="auth.user.edit"/>
    <mvc:view-controller path="/role/list" view-name="auth.role.list"/>
    <mvc:view-controller path="/users/add-page" view-name="auth.user.add"/>
    <mvc:view-controller path="/client/list" view-name="client.list"/>
    <mvc:view-controller path="/client/add-page" view-name="client.add"/>
    <mvc:view-controller path="/cart/list" view-name="purchase.list"/>
    <mvc:view-controller path="/product/list" view-name="product.list"/>
    <mvc:view-controller path="/product/add-page" view-name="product.add"/>
    <mvc:view-controller path="/price/list" view-name="price.list"/>
    <mvc:view-controller path="/price/add-page" view-name="price.add"/>
    <mvc:view-controller path="/cart/show" view-name="purchase.show"/>

    <mvc:view-controller path="/error/404" view-name="error.404"/>
    <mvc:view-controller path="/error/405" view-name="error.405"/>
    <mvc:view-controller path="/error/trace" view-name="error.trace"/>
    <mvc:view-controller path="/error/403" view-name="error.403"/>
    <mvc:view-controller path="/test" view-name="test"/>


</beans>